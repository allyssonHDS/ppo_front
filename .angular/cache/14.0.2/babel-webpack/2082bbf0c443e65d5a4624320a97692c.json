{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\n\nfunction DashboardComponent_mat_grid_tile_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 16)(1, \"mat-card\", 17)(2, \"mat-card-header\")(3, \"mat-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"button\", 18)(6, \"mat-icon\");\n    i0.ɵɵtext(7, \"more_vert\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"mat-menu\", 19, 5)(10, \"button\", 6);\n    i0.ɵɵtext(11, \"Expand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 6);\n    i0.ɵɵtext(13, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(14, \"mat-card-content\", 20)(15, \"div\");\n    i0.ɵɵtext(16, \"Card Content Here\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const card_r2 = ctx.$implicit;\n\n    const _r3 = i0.ɵɵreference(9);\n\n    i0.ɵɵproperty(\"colspan\", card_r2.cols)(\"rowspan\", card_r2.rows);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", card_r2.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r3);\n  }\n}\n\nexport class DashboardComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    /** Based on the screen size, switch from standard to one column per row */\n\n    this.cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return [{\n          title: 'Card 1',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 2',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 3',\n          cols: 1,\n          rows: 1\n        }, {\n          title: 'Card 4',\n          cols: 1,\n          rows: 1\n        }];\n      }\n\n      return [{\n        title: 'Card 1',\n        cols: 2,\n        rows: 1\n      }, {\n        title: 'Card 2',\n        cols: 1,\n        rows: 1\n      }, {\n        title: 'Card 3',\n        cols: 1,\n        rows: 2\n      }, {\n        title: 'Card 4',\n        cols: 1,\n        rows: 1\n      }];\n    }));\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 34,\n  vars: 4,\n  consts: [[1, \"grid-container\"], [1, \"header\", \"mat-elevation-z4\"], [1, \"mat-h1\", \"ab\"], [\"mat-button\", \"\", 3, \"matMenuTriggerFor\"], [1, \"material-icons\", \"blue\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\"], [\"src\", \"assets/Group.png\", \"alt\", \"logo\", 1, \"logo\"], [\"src\", \"assets/computacao-em-nuvem 1 (1).png\", \"alt\", \"logo\", 1, \"logo\"], [\"src\", \"assets/dados 1.png\", \"alt\", \"logo\", 1, \"logo\"], [\"src\", \"assets/dispositivos-eletronicos 1.png\", \"alt\", \"logo\", 1, \"logo\"], [\"src\", \"assets/dispositivo 1.png\", \"alt\", \"logo\", 1, \"logo\"], [\"src\", \"assets/lista-de-controle 1.png\", \"alt\", \"logo\", 1, \"logo\"], [\"src\", \"assets/historia 1.png\", \"alt\", \"logo\", 1, \"logo\"], [\"cols\", \"2\", \"rowHeight\", \"350px\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [1, \"dashboard-card\"], [\"mat-icon-button\", \"\", \"aria-label\", \"Toggle menu\", 1, \"more-button\", 3, \"matMenuTriggerFor\"], [\"xPosition\", \"before\"], [1, \"dashboard-card-content\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"span\")(3, \"h1\", 2)(4, \"button\", 3)(5, \"i\", 4);\n      i0.ɵɵtext(6, \"menu\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"mat-menu\", null, 5)(9, \"button\", 6);\n      i0.ɵɵelement(10, \"img\", 7);\n      i0.ɵɵtext(11, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵelement(13, \"img\", 8);\n      i0.ɵɵtext(14, \"Meus Brokers\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 6);\n      i0.ɵɵelement(16, \"img\", 9);\n      i0.ɵɵtext(17, \"Meus Canais\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 6);\n      i0.ɵɵelement(19, \"img\", 10);\n      i0.ɵɵtext(20, \"Meus Dispositivos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 6);\n      i0.ɵɵelement(22, \"img\", 11);\n      i0.ɵɵtext(23, \"Meus Grupos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 6);\n      i0.ɵɵelement(25, \"img\", 12);\n      i0.ɵɵtext(26, \"Meus Topicos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 6);\n      i0.ɵɵelement(28, \"img\", 13);\n      i0.ɵɵtext(29, \"Hist\\u00F3rico\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(30, \" Dashboard\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"mat-grid-list\", 14);\n      i0.ɵɵtemplate(32, DashboardComponent_mat_grid_tile_32_Template, 17, 4, \"mat-grid-tile\", 15);\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matMenuTriggerFor\", _r0);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(33, 2, ctx.cards));\n    }\n  },\n  styles: [\".header[_ngcontent-%COMP%]{\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background-color: rgb(106, 163, 196);\\r\\n}\\r\\n.ab[_ngcontent-%COMP%]{margin-top: 20px;}\\r\\n.grid-container[_ngcontent-%COMP%] {\\r\\n  margin: 20px;\\r\\n}\\r\\n.dashboard-card[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  top: 15px;\\r\\n  left: 15px;\\r\\n  right: 15px;\\r\\n  bottom: 15px;\\r\\n}\\r\\n.more-button[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  top: 5px;\\r\\n  right: 10px;\\r\\n}\\r\\n.dashboard-card-content[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n}\\r\\n.logo[_ngcontent-%COMP%]{\\r\\n  max-height: 30px;\\r\\n  margin-right: 5px;\\r\\n  \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixvQ0FBb0M7QUFDdEM7QUFDQSxJQUFJLGdCQUFnQixDQUFDO0FBRXJCO0VBQ0UsWUFBWTtBQUNkO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFVBQVU7RUFDVixXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFdBQVc7QUFDYjtBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCOztBQUVuQiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXJ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMDYsIDE2MywgMTk2KTtcclxufVxyXG4uYWJ7bWFyZ2luLXRvcDogMjBweDt9XHJcblxyXG4uZ3JpZC1jb250YWluZXIge1xyXG4gIG1hcmdpbjogMjBweDtcclxufVxyXG5cclxuLmRhc2hib2FyZC1jYXJkIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAxNXB4O1xyXG4gIGxlZnQ6IDE1cHg7XHJcbiAgcmlnaHQ6IDE1cHg7XHJcbiAgYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ubW9yZS1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDVweDtcclxuICByaWdodDogMTBweDtcclxufVxyXG5cclxuLmRhc2hib2FyZC1jYXJkLWNvbnRlbnQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmxvZ297XHJcbiAgbWF4LWhlaWdodDogMzBweDtcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICBcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAASC,WAAT,QAAgD,qBAAhD;;;;;;ICgBIC,0CAA8F,CAA9F,EAA8F,UAA9F,EAA8F,EAA9F,EAA8F,CAA9F,EAA8F,iBAA9F,EAA8F,CAA9F,EAA8F,gBAA9F;IAIQA;IACAA,mCAAgG,CAAhG,EAAgG,UAAhG;IACYA;IAASA;IAErBA,wCAA6C,EAA7C,EAA6C,QAA7C,EAA6C,CAA7C;IACwBA;IAAMA;IAC5BA;IAAsBA;IAAMA;IAIlCA,8CAAiD,EAAjD,EAAiD,KAAjD;IACOA;IAAiBA;;;;;;;;IAfsBA,uCAAqB,SAArB,EAAqBC,YAArB;IAI1CD;IAAAA;IAC4CA;IAAAA;;;;ADdxD,OAAM,MAAOE,kBAAP,CAAyB;EAsB7BC,YAAoBC,kBAApB,EAA0D;IAAtC;IArBpB;;IACA,aAAQ,KAAKA,kBAAL,CAAwBC,OAAxB,CAAgCN,WAAW,CAACO,OAA5C,EAAqDC,IAArD,CACNT,GAAG,CAAC,CAAC;MAAEU;IAAF,CAAD,KAAgB;MAClB,IAAIA,OAAJ,EAAa;QACX,OAAO,CACL;UAAEC,KAAK,EAAE,QAAT;UAAmBC,IAAI,EAAE,CAAzB;UAA4BC,IAAI,EAAE;QAAlC,CADK,EAEL;UAAEF,KAAK,EAAE,QAAT;UAAmBC,IAAI,EAAE,CAAzB;UAA4BC,IAAI,EAAE;QAAlC,CAFK,EAGL;UAAEF,KAAK,EAAE,QAAT;UAAmBC,IAAI,EAAE,CAAzB;UAA4BC,IAAI,EAAE;QAAlC,CAHK,EAIL;UAAEF,KAAK,EAAE,QAAT;UAAmBC,IAAI,EAAE,CAAzB;UAA4BC,IAAI,EAAE;QAAlC,CAJK,CAAP;MAMD;;MAED,OAAO,CACL;QAAEF,KAAK,EAAE,QAAT;QAAmBC,IAAI,EAAE,CAAzB;QAA4BC,IAAI,EAAE;MAAlC,CADK,EAEL;QAAEF,KAAK,EAAE,QAAT;QAAmBC,IAAI,EAAE,CAAzB;QAA4BC,IAAI,EAAE;MAAlC,CAFK,EAGL;QAAEF,KAAK,EAAE,QAAT;QAAmBC,IAAI,EAAE,CAAzB;QAA4BC,IAAI,EAAE;MAAlC,CAHK,EAIL;QAAEF,KAAK,EAAE,QAAT;QAAmBC,IAAI,EAAE,CAAzB;QAA4BC,IAAI,EAAE;MAAlC,CAJK,CAAP;IAMD,CAhBE,CADG,CAAR;EAoB8D;;AAtBjC;;;mBAAlBT,oBAAkBF;AAAA;;;QAAlBE;EAAkBU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/BhB,+BAA4B,CAA5B,EAA4B,aAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,MAA5B,EAA4B,CAA5B,EAA4B,IAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,QAA5B,EAA4B,CAA5B,EAA4B,CAA5B,EAA4B,GAA5B,EAA4B,CAA5B;MAIqFA;MAAIA;MACjFA,0CAA0B,CAA1B,EAA0B,QAA1B,EAA0B,CAA1B;MACwBA;MAAoDA;MAASA;MACnFA;MAAsBA;MAAwEA;MAAYA;MAC1GA;MAAsBA;MAAsDA;MAAWA;MACvFA;MAAsBA;MAAyEA;MAAiBA;MAChHA;MAAsBA;MAA4DA;MAAWA;MAC7FA;MAAsBA;MAAkEA;MAAYA;MACpGA;MAAsBA;MAAyDA;MAASA;MAE5FA;MAASA;MAGbA;MACEA;;MAmBFA;;;;;;MAjCyBA;MAAAA;MAcSA;MAAAA","names":["map","Breakpoints","i0","card_r2","DashboardComponent","constructor","breakpointObserver","observe","Handset","pipe","matches","title","cols","rows","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\GIT\\ppo_front\\src\\app\\dashboard\\dashboard.component.ts","D:\\GIT\\ppo_front\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent {\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\r\n    map(({ matches }) => {\r\n      if (matches) {\r\n        return [\r\n          { title: 'Card 1', cols: 1, rows: 1 },\r\n          { title: 'Card 2', cols: 1, rows: 1 },\r\n          { title: 'Card 3', cols: 1, rows: 1 },\r\n          { title: 'Card 4', cols: 1, rows: 1 }\r\n        ];\r\n      }\r\n\r\n      return [\r\n        { title: 'Card 1', cols: 2, rows: 1 },\r\n        { title: 'Card 2', cols: 1, rows: 1 },\r\n        { title: 'Card 3', cols: 1, rows: 2 },\r\n        { title: 'Card 4', cols: 1, rows: 1 }\r\n      ];\r\n    })\r\n  );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n}\r\n","<div class=\"grid-container\">\r\n  <mat-toolbar class=\"header mat-elevation-z4\">\r\n    <span>\r\n      <h1 class=\"mat-h1 ab\">\r\n        <button mat-button [matMenuTriggerFor]=\"menu\"><i class=\"material-icons blue\">menu</i></button>\r\n        <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/Group.png\" alt=\"logo\">Dashboard</button>\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/computacao-em-nuvem 1 (1).png\" alt=\"logo\">Meus Brokers</button>\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/dados 1.png\" alt=\"logo\">Meus Canais</button>\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/dispositivos-eletronicos 1.png\" alt=\"logo\">Meus Dispositivos</button>\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/dispositivo 1.png\" alt=\"logo\">Meus Grupos</button>\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/lista-de-controle 1.png\" alt=\"logo\">Meus Topicos</button>\r\n          <button mat-menu-item><img class=\"logo\" src=\"assets/historia 1.png\" alt=\"logo\">Histórico</button>\r\n        </mat-menu>\r\n      Dashboard</h1>\r\n  </span>\r\n  </mat-toolbar>\r\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\r\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\r\n      <mat-card class=\"dashboard-card\">\r\n        <mat-card-header>\r\n          <mat-card-title>\r\n            {{card.title}}\r\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\r\n              <button mat-menu-item>Expand</button>\r\n              <button mat-menu-item>Remove</button>\r\n            </mat-menu>\r\n          </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content class=\"dashboard-card-content\">\r\n          <div>Card Content Here</div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </mat-grid-tile>\r\n  </mat-grid-list>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}